{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/src/Containers/CheckBoxContainer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Checkbox from './newcheckbox';\nvar checkboxes = [{\n  name: 'Delhi',\n  key: 'Delhi',\n  label: 'Delhi'\n}, {\n  name: 'Mumbai',\n  key: 'Mumbai',\n  label: 'Mumbai'\n}, {\n  name: 'Banglore',\n  key: 'Banglore',\n  label: 'Banglore'\n}];\n\nvar CheckboxContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(CheckboxContainer, _React$Component);\n\n  var _super = _createSuper(CheckboxContainer);\n\n  function CheckboxContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CheckboxContainer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      checkedItems: new Map()\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CheckboxContainer, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var item = e.target.name;\n      var isChecked = e.target.checked;\n      this.setState(function (prevState) {\n        return {\n          checkedItems: prevState.checkedItems.set(item, isChecked)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: checkboxes.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [item.name, /*#__PURE__*/_jsxDEV(Checkbox, {\n              name: item.name,\n              checked: _this2.state.checkedItems.get(item.name),\n              onChange: _this2.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, _this2)]\n          }, item.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return CheckboxContainer;\n}(React.Component);\n\nexport default CheckboxContainer;","map":{"version":3,"sources":["/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/src/Containers/CheckBoxContainer.js"],"names":["React","PropTypes","Checkbox","checkboxes","name","key","label","CheckboxContainer","props","state","checkedItems","Map","handleChange","bind","e","item","target","isChecked","checked","setState","prevState","set","map","get","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,IAAMC,UAAU,GAAG,CACf;AACIC,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,GAAG,EAAE,OAFT;AAGIC,EAAAA,KAAK,EAAE;AAHX,CADe,EAMf;AACIF,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,GAAG,EAAE,QAFT;AAGIC,EAAAA,KAAK,EAAE;AAHX,CANe,EAWf;AACIF,EAAAA,IAAI,EAAE,UADV;AAEIC,EAAAA,GAAG,EAAE,UAFT;AAGIC,EAAAA,KAAK,EAAE;AAHX,CAXe,CAAnB;;IAkBMC,iB;;;;;AACF,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,IAAIC,GAAJ;AADL,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AAPe;AAQlB;;;;iCAEYC,C,EAAG;AACZ,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASZ,IAAtB;AACA,UAAMa,SAAS,GAAGH,CAAC,CAACE,MAAF,CAASE,OAA3B;AAEA,WAAKC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACvB,eAAO;AAAEV,UAAAA,YAAY,EAAEU,SAAS,CAACV,YAAV,CAAuBW,GAAvB,CAA2BN,IAA3B,EAAiCE,SAAjC;AAAhB,SAAP;AACH,OAFD;AAGH;;;6BAEQ;AAAA;;AACL,0BACI,QAAC,KAAD,CAAO,QAAP;AAAA,kBAEQd,UAAU,CAACmB,GAAX,CAAe,UAAAP,IAAI;AAAA,8BACf;AAAA,uBACKA,IAAI,CAACX,IADV,eAEI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEW,IAAI,CAACX,IAArB;AAA2B,cAAA,OAAO,EAAE,MAAI,CAACK,KAAL,CAAWC,YAAX,CAAwBa,GAAxB,CAA4BR,IAAI,CAACX,IAAjC,CAApC;AAA4E,cAAA,QAAQ,EAAE,MAAI,CAACQ;AAA3F;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,aAAYG,IAAI,CAACV,GAAjB;AAAA;AAAA;AAAA;AAAA,oBADe;AAAA,SAAnB;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH;;;;EAjC2BL,KAAK,CAACwB,S;;AAoCtC,eAAejB,iBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Checkbox from './newcheckbox';\nconst checkboxes = [\n    {\n        name: 'Delhi',\n        key: 'Delhi',\n        label: 'Delhi',\n    },\n    {\n        name: 'Mumbai',\n        key: 'Mumbai',\n        label: 'Mumbai',\n    },\n    {\n        name: 'Banglore',\n        key: 'Banglore',\n        label: 'Banglore',\n    },\n];\n\nclass CheckboxContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedItems: new Map(),\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const item = e.target.name;\n        const isChecked = e.target.checked;\n\n        this.setState(prevState => {\n            return { checkedItems: prevState.checkedItems.set(item, isChecked) }\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    checkboxes.map(item => (\n                        <label key={item.key}>\n                            {item.name}\n                            <Checkbox name={item.name} checked={this.state.checkedItems.get(item.name)} onChange={this.handleChange} />\n                        </label>\n                    ))\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxContainer;"]},"metadata":{},"sourceType":"module"}