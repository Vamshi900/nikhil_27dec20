{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toPropertyKey from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectSpread from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/src/Containers/UserDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Form from './Form';\nimport Debug from './Debug';\nimport { validate } from './helper';\n\nfunction UserDetails(_ref) {\n  _s();\n\n  var initialValues = _ref.initialValues;\n\n  var _React$useState = React.useState(initialValues),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      errors = _React$useState4[0],\n      setErrors = _React$useState4[1];\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      touched = _React$useState6[0],\n      setTouched = _React$useState6[1]; // change event handler\n\n\n  var handleChange = function handleChange(evt) {\n    var _evt$target = evt.target,\n        name = _evt$target.name,\n        newValue = _evt$target.value,\n        type = _evt$target.type; // keep number fields as numbers\n\n    var value = type === 'number' ? +newValue : newValue; // save field values\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: value\n    })); // was the field modified\n\n    setTouched(_objectSpread(_objectSpread({}, touched), {}, {\n      [name]: true\n    }));\n  };\n\n  var handleBlur = function handleBlur(evt) {\n    var _evt$target2 = evt.target,\n        name = _evt$target2.name,\n        value = _evt$target2.value; // remove whatever error was there previously\n\n    var removedError = errors[name],\n        rest = _objectWithoutProperties(errors, [name].map(_toPropertyKey)); // check for a new error\n\n\n    var error = validate[name](value); // // validate the field if the value has been touched\n\n    setErrors(_objectSpread(_objectSpread({}, rest), error && {\n      [name]: touched[name] && error\n    }));\n  }; // form submit handler\n\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault(); // validate the form\n\n    var formValidation = Object.keys(values).reduce(function (acc, key) {\n      var newError = validate[key](values[key]);\n      var newTouched = {\n        [key]: true\n      };\n      return {\n        errors: _objectSpread(_objectSpread({}, acc.errors), newError && {\n          [key]: newError\n        }),\n        touched: _objectSpread(_objectSpread({}, acc.touched), newTouched)\n      };\n    }, {\n      errors: _objectSpread({}, errors),\n      touched: _objectSpread({}, touched)\n    });\n    setErrors(formValidation.errors);\n    setTouched(formValidation.touched);\n\n    if (!Object.values(formValidation.errors).length && // errors object is empty\n    Object.values(formValidation.touched).length === Object.values(values).length && // all fields were touched\n    Object.values(formValidation.touched).every(function (t) {\n      return t === true;\n    }) // every touched field is true\n    ) {\n        alert(JSON.stringify(values, null, 2));\n      }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      handleBlur: handleBlur,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      errors: errors,\n      touched: touched,\n      values: values\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserDetails, \"LuZJJpYS3AiPdupY3dSE9VLjb5E=\");\n\n_c = UserDetails;\nexport default UserDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"sources":["/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/src/Containers/UserDetails.js"],"names":["React","Form","Debug","validate","UserDetails","initialValues","useState","values","setValues","errors","setErrors","touched","setTouched","handleChange","evt","target","name","newValue","value","type","handleBlur","removedError","rest","error","handleSubmit","preventDefault","formValidation","Object","keys","reduce","acc","key","newError","newTouched","length","every","t","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from './Form';\nimport Debug from './Debug';\nimport { validate } from './helper';\n\nfunction UserDetails({ initialValues }) {\n  const [values, setValues] = React.useState(initialValues);\n\n  const [errors, setErrors] = React.useState({});\n\n  const [touched, setTouched] = React.useState({});\n\n  // change event handler\n  const handleChange = evt => {\n    const { name, value: newValue, type } = evt.target;\n\n\n    // keep number fields as numbers\n    const value = type === 'number' ? +newValue : newValue;\n\n\n\n    // save field values\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    // was the field modified\n    setTouched({\n      ...touched,\n      [name]: true,\n    });\n  };\n\n  const handleBlur = evt => {\n    const { name, value } = evt.target;\n\n    // remove whatever error was there previously\n    const { [name]: removedError, ...rest } = errors;\n\n    // check for a new error\n    const error = validate[name](value);\n\n    // // validate the field if the value has been touched\n    setErrors({\n      ...rest,\n      ...(error && { [name]: touched[name] && error }),\n    });\n  };\n\n  // form submit handler\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    // validate the form\n    const formValidation = Object.keys(values).reduce(\n      (acc, key) => {\n        const newError = validate[key](values[key]);\n        const newTouched = { [key]: true };\n        return {\n          errors: {\n            ...acc.errors,\n            ...(newError && { [key]: newError }),\n          },\n          touched: {\n            ...acc.touched,\n            ...newTouched,\n          },\n        };\n      },\n      {\n        errors: { ...errors },\n        touched: { ...touched },\n      },\n    );\n    setErrors(formValidation.errors);\n    setTouched(formValidation.touched);\n\n    if (\n      !Object.values(formValidation.errors).length && // errors object is empty\n      Object.values(formValidation.touched).length ===\n      Object.values(values).length && // all fields were touched\n      Object.values(formValidation.touched).every(t => t === true) // every touched field is true\n    ) {\n      alert(JSON.stringify(values, null, 2));\n    }\n  };\n\n  return (\n    <>\n      <Form\n        handleBlur={handleBlur}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        errors={errors}\n        touched={touched}\n        values={values}\n      />\n      {/* <Debug values={values} errors={errors} touched={touched} /> */}\n    </>\n  );\n}\n\nexport default UserDetails;\n"]},"metadata":{},"sourceType":"module"}