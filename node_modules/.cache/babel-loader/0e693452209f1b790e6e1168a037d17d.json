{"ast":null,"code":"export var tableSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0\n  },\n  reducers: {\n    increment: function increment(state) {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: function decrement(state) {\n      state.value -= 1;\n    },\n    incrementByAmount: function incrementByAmount(state, action) {\n      state.value += action.payload;\n    }\n  }\n});\nvar _tableSlice$actions = tableSlice.actions,\n    increment = _tableSlice$actions.increment,\n    decrement = _tableSlice$actions.decrement,\n    incrementByAmount = _tableSlice$actions.incrementByAmount;\nexport { increment, decrement, incrementByAmount };\nexport var selectCount = function selectCount(state) {\n  return state.counter.value;\n};","map":{"version":3,"sources":["/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/src/reducers/tableSlice.js"],"names":["tableSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","selectCount","counter"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAGC,WAAW,CAAC;AAClCC,EAAAA,IAAI,EAAE,SAD4B;AAElCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAFoB;AAKlCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,mBAAAC,KAAK,EAAI;AAClB;AACA;AACA;AACA;AACAA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD,KAPO;AAQRI,IAAAA,SAAS,EAAE,mBAAAD,KAAK,EAAI;AAClBA,MAAAA,KAAK,CAACH,KAAN,IAAe,CAAf;AACD,KAVO;AAWRK,IAAAA,iBAAiB,EAAE,2BAACF,KAAD,EAAQG,MAAR,EAAmB;AACpCH,MAAAA,KAAK,CAACH,KAAN,IAAeM,MAAM,CAACC,OAAtB;AACD;AAbO;AALwB,CAAD,CAA9B;0BAsBkDX,UAAU,CAACY,O;IAApDN,S,uBAAAA,S;IAAUE,S,uBAAAA,S;IAAUC,iB,uBAAAA,iB;;AAElC,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAN,KAAK;AAAA,SAAIA,KAAK,CAACO,OAAN,CAAcV,KAAlB;AAAA,CAAzB","sourcesContent":["export const tableSlice = createSlice({\n    name: 'counter',\n    initialState: {\n      value: 0\n    },\n    reducers: {\n      increment: state => {\n        // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n        // doesn't actually mutate the state because it uses the immer library,\n        // which detects changes to a \"draft state\" and produces a brand new\n        // immutable state based off those changes\n        state.value += 1\n      },\n      decrement: state => {\n        state.value -= 1\n      },\n      incrementByAmount: (state, action) => {\n        state.value += action.payload\n      }\n    }\n  })\n\n  export const {increment,decrement,incrementByAmount} = tableSlice.actions;\n\n  export const selectCount = state => state.counter.value\n"]},"metadata":{},"sourceType":"module"}