{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/src/Containers/CheckBoxContainer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Checkbox from './newcheckbox';\nvar checkboxes = [{\n  name: 'Delhi',\n  key: 'Delhi',\n  label: 'Delhi'\n}, {\n  name: 'Mumbai',\n  key: 'Mumbai',\n  label: 'Mumbai'\n}, {\n  name: 'Banglore',\n  key: 'Banglore',\n  label: 'Banglore'\n}];\n\nvar CheckboxContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(CheckboxContainer, _React$Component);\n\n  var _super = _createSuper(CheckboxContainer);\n\n  function CheckboxContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CheckboxContainer);\n\n    _this = _super.call(this, props);\n\n    _this.getUpdateLocation = function () {\n      var locations = _this.state.location;\n\n      if (isChecked) {\n        if (!locations.includes(item)) {\n          locations += locations === '' ? item : \",\".concat(item);\n        }\n      } else {\n        if (locations.includes(item)) {\n          var newLocations = '';\n\n          if (_this.state.checkedItems.size > 0) {\n            var _iterator = _createForOfIteratorHelper(_this.state.checkedItems.entries()),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var _step$value = _slicedToArray(_step.value, 2),\n                    key = _step$value[0],\n                    value = _step$value[1];\n\n                if (value && newLocations === '' && key !== item) {\n                  newLocations += key;\n                } else if (value) {\n                  newLocations += key === item ? '' : \",\".concat(key);\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n\n          locations = newLocations;\n        }\n      }\n\n      return locations;\n    };\n\n    _this.handleChange = function (e) {\n      var item = e.target.name;\n      var isChecked = e.target.checked;\n      console.log(_this.state);\n\n      var locations = _this.getUpdateLocation();\n\n      _this.setState(function (prevState) {\n        return {\n          checkedItems: prevState.checkedItems.set(item, isChecked),\n          location: locations\n        };\n      });\n\n      console.log(_this.state);\n      console.log(locations);\n    };\n\n    _this.state = {\n      checkedItems: new Map(),\n      location: ''\n    }; // this.handleChange = this.handleChange.bind(this);\n\n    return _this;\n  }\n\n  _createClass(CheckboxContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: checkboxes.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [item.name, /*#__PURE__*/_jsxDEV(Checkbox, {\n              name: item.name,\n              checked: _this2.state.checkedItems.get(item.name),\n              onChange: _this2.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, _this2)]\n          }, item.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return CheckboxContainer;\n}(React.Component);\n\nexport default CheckboxContainer;","map":{"version":3,"sources":["/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/src/Containers/CheckBoxContainer.js"],"names":["React","PropTypes","Checkbox","checkboxes","name","key","label","CheckboxContainer","props","getUpdateLocation","locations","state","location","isChecked","includes","item","newLocations","checkedItems","size","entries","value","handleChange","e","target","checked","console","log","setState","prevState","set","Map","map","get","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Checkbox from './newcheckbox';\nconst checkboxes = [\n    {\n        name: 'Delhi',\n        key: 'Delhi',\n        label: 'Delhi',\n    },\n    {\n        name: 'Mumbai',\n        key: 'Mumbai',\n        label: 'Mumbai',\n    },\n    {\n        name: 'Banglore',\n        key: 'Banglore',\n        label: 'Banglore',\n    },\n];\n\nclass CheckboxContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedItems: new Map(),\n            location: '',\n        }\n\n        // this.handleChange = this.handleChange.bind(this);\n    }\n     getUpdateLocation = ()=>{\n        let locations = this.state.location;\n\n        if (isChecked) {\n            if (!locations.includes(item)) {\n                locations += locations === '' ? item : `,${item}`;\n            }\n        } else {\n            if (locations.includes(item)) {\n                let newLocations = '';\n                if (this.state.checkedItems.size > 0) {\n                    for (const [key, value] of this.state.checkedItems.entries()) {\n                        if (value && newLocations === '' && key !== item) {\n                            newLocations += key;\n                        } else if (value) {\n                            newLocations += key === item ? '' : `,${key}`;\n\n                        }\n                    }\n                }\n                locations = newLocations;\n            }\n        }\n        return locations\n     }\n    handleChange = (e) => {\n        const item = e.target.name;\n        const isChecked = e.target.checked;\n        console.log(this.state);\n        const locations = this.getUpdateLocation();\n\n\n        this.setState(prevState => {\n            return { checkedItems: prevState.checkedItems.set(item, isChecked), location: locations }\n        });\n        console.log(this.state);\n        console.log(locations);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    checkboxes.map(item => (\n                        <label key={item.key}>\n                            {item.name}\n                            <Checkbox name={item.name} checked={this.state.checkedItems.get(item.name)} onChange={this.handleChange} />\n                        </label>\n                    ))\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CheckboxContainer;"]},"metadata":{},"sourceType":"module"}