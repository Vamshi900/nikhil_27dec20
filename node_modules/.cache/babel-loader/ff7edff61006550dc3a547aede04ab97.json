{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/src/Containers/UserForm.js\";\nimport React from 'react';\nimport UserDetails from './UserDetails';\n\nvar nameValidation = function nameValidation(fieldName, fieldValue) {\n  if (fieldValue.trim() === '') {\n    return \"\".concat(fieldName, \" is required\");\n  }\n\n  if (/[^a-zA-Z -]/.test(fieldValue)) {\n    return 'Invalid characters';\n  }\n\n  if (fieldValue.trim().length < 3) {\n    return \"\".concat(fieldName, \" needs to be at least three characters\");\n  }\n\n  return null;\n};\n\nvar emailValidation = function emailValidation(email) {\n  if (/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\n    return null;\n  }\n\n  if (email.trim() === '') {\n    return 'Email is required';\n  }\n\n  return 'Please enter a valid email';\n};\n\nvar ageValidation = function ageValidation(age) {\n  if (!age) {\n    return 'Age is required';\n  }\n\n  if (age < 18) {\n    return 'Age must be at least 18';\n  }\n\n  if (age > 99) {\n    return 'Age must be under 99';\n  }\n\n  return null;\n};\n\nvar validate = {\n  Name: function Name(name) {\n    return nameValidation('Name', name);\n  },\n  email: emailValidation,\n  age: ageValidation\n};\nvar initialValues = {\n  age: 0,\n  email: '',\n  Name: '',\n  lastName: ''\n};\nexport default function UserForm() {\n  return /*#__PURE__*/_jsxDEV(UserDetails, {\n    validate: validate,\n    initialValues: initialValues\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n}\n_c = UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/Users/vamshisaggurthi/Dev/Kaki project/proje/nikhil_27dec20/src/Containers/UserForm.js"],"names":["React","UserDetails","nameValidation","fieldName","fieldValue","trim","test","length","emailValidation","email","ageValidation","age","validate","Name","name","initialValues","lastName","UserForm"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAYC,UAAZ,EAA2B;AAC9C,MAAIA,UAAU,CAACC,IAAX,OAAsB,EAA1B,EAA8B;AAC1B,qBAAUF,SAAV;AACH;;AACD,MAAI,cAAcG,IAAd,CAAmBF,UAAnB,CAAJ,EAAoC;AAChC,WAAO,oBAAP;AACH;;AACD,MAAIA,UAAU,CAACC,IAAX,GAAkBE,MAAlB,GAA2B,CAA/B,EAAkC;AAC9B,qBAAUJ,SAAV;AACH;;AACD,SAAO,IAAP;AACH,CAXD;;AAaA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,MACI,uEAAuEH,IAAvE,CACIG,KADJ,CADJ,EAIE;AACE,WAAO,IAAP;AACH;;AACD,MAAIA,KAAK,CAACJ,IAAN,OAAiB,EAArB,EAAyB;AACrB,WAAO,mBAAP;AACH;;AACD,SAAO,4BAAP;AACH,CAZD;;AAcA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG,EAAI;AACzB,MAAI,CAACA,GAAL,EAAU;AACN,WAAO,iBAAP;AACH;;AACD,MAAIA,GAAG,GAAG,EAAV,EAAc;AACV,WAAO,yBAAP;AACH;;AACD,MAAIA,GAAG,GAAG,EAAV,EAAc;AACV,WAAO,sBAAP;AACH;;AACD,SAAO,IAAP;AACH,CAXD;;AAaA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE,cAAAC,IAAI;AAAA,WAAIZ,cAAc,CAAC,MAAD,EAASY,IAAT,CAAlB;AAAA,GADG;AAEbL,EAAAA,KAAK,EAAED,eAFM;AAGbG,EAAAA,GAAG,EAAED;AAHQ,CAAjB;AAMA,IAAMK,aAAa,GAAG;AAClBJ,EAAAA,GAAG,EAAE,CADa;AAElBF,EAAAA,KAAK,EAAE,EAFW;AAGlBI,EAAAA,IAAI,EAAE,EAHY;AAIlBG,EAAAA,QAAQ,EAAE;AAJQ,CAAtB;AAOA,eAAe,SAASC,QAAT,GAAoB;AAC/B,sBAAO,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAEL,QAAvB;AAAiC,IAAA,aAAa,EAAEG;AAAhD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH;KAHuBE,Q","sourcesContent":["import React from 'react';\nimport UserDetails from './UserDetails';\n\nconst nameValidation = (fieldName, fieldValue) => {\n    if (fieldValue.trim() === '') {\n        return `${fieldName} is required`;\n    }\n    if (/[^a-zA-Z -]/.test(fieldValue)) {\n        return 'Invalid characters';\n    }\n    if (fieldValue.trim().length < 3) {\n        return `${fieldName} needs to be at least three characters`;\n    }\n    return null;\n};\n\nconst emailValidation = email => {\n    if (\n        /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n            email,\n        )\n    ) {\n        return null;\n    }\n    if (email.trim() === '') {\n        return 'Email is required';\n    }\n    return 'Please enter a valid email';\n};\n\nconst ageValidation = age => {\n    if (!age) {\n        return 'Age is required';\n    }\n    if (age < 18) {\n        return 'Age must be at least 18';\n    }\n    if (age > 99) {\n        return 'Age must be under 99';\n    }\n    return null;\n};\n\nconst validate = {\n    Name: name => nameValidation('Name', name),\n    email: emailValidation,\n    age: ageValidation,\n};\n\nconst initialValues = {\n    age: 0,\n    email: '',\n    Name: '',\n    lastName: '',\n};\n\nexport default function UserForm() {\n    return <UserDetails validate={validate} initialValues={initialValues} />\n\n}"]},"metadata":{},"sourceType":"module"}